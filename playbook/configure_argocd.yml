- name: Deploy ArgoCD + Helm for GitOps
  hosts: master
  become: yes
  tasks:

    - name: Create ArgoCD namespace
      shell: kubectl create namespace argocd --dry-run=client -o yaml | kubectl apply -f -
      changed_when: false

    - name: Generate and apply ArgoCD Secrets
      shell: |
        kubectl create secret generic argocd-redis -n argocd --from-literal=auth=$(openssl rand -hex 16) --dry-run=client -o yaml | kubectl apply -f -
        kubectl create secret generic argocd-initial-admin-secret -n argocd --from-literal=password=$(openssl rand -hex 16) --dry-run=client -o yaml | kubectl apply -f -
        openssl req -x509 -newkey rsa:4096 -keyout /tmp/tls.key -out /tmp/tls.crt -days 365 -nodes -subj '/CN=argocd-repo-server'
        kubectl create secret generic argocd-repo-server-tls -n argocd --from-file=tls.crt=/tmp/tls.crt --from-file=tls.key=/tmp/tls.key --dry-run=client -o yaml | kubectl apply -f -
        rm -f /tmp/tls.key /tmp/tls.crt
      changed_when: false

    - name: Install ArgoCD
      shell: kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

    - name: Wait for ArgoCD to be ready
      shell: kubectl wait --for=condition=Ready pod -l app.kubernetes.io/name=argocd-server -n argocd --timeout=300s

    - name: Expose ArgoCD server
      shell: nohup kubectl port-forward svc/argocd-server -n argocd 8080:443 > /dev/null 2>&1 &
      async: 10
      poll: 0

    - name: Retrieve and verify ArgoCD admin password
      shell: |
        PASSWORD=$(kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 --decode)
        if [[ -z "$PASSWORD" ]]; then
          echo "Failed to retrieve ArgoCD admin password!" && exit 1
        fi
        echo "$PASSWORD"
      register: argocd_admin_password
      changed_when: false
      failed_when: argocd_admin_password.stdout == "Failed to retrieve ArgoCD admin password!"

    - name: Log into ArgoCD CLI
      shell: argocd login localhost:8080 --username admin --password "{{ argocd_admin_password.stdout }}" --insecure
      changed_when: false
      failed_when: "'logged in successfully' not in argocd_admin_password.stdout"

    - name: Restart problematic ArgoCD Pods
      shell: |
        for pod in $(kubectl get pods -n argocd --no-headers | awk '$3 ~ /CreateContainerConfigError|CrashLoopBackOff/ {print $1}'); do
          kubectl delete pod -n argocd $pod
        done
      changed_when: false

    - name: Rollout restart ArgoCD deployments and statefulsets
      shell: |
        kubectl rollout restart deployment -n argocd
        kubectl rollout restart statefulset -n argocd
      changed_when: false

    - name: Ensure Helm is installed
      shell: command -v helm || curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
      changed_when: false

    - name: Ensure Helm charts directory exists
      file:
        path: charts/my-app
        state: directory
        mode: '0755'

    - name: Add GitOps repository to ArgoCD
      shell: argocd repo add https://github.com/orumpark94/gitops-k8s-deploy.git
      ignore_errors: yes

    - name: Create and sync ArgoCD application
      shell: |
        argocd app create gitops-helm-app --repo https://github.com/orumpark94/gitops-k8s-deploy.git \
        --path charts/my-app --dest-server https://kubernetes.default.svc \
        --dest-namespace default --sync-policy automated --helm-set replicaCount=2
        argocd app sync gitops-helm-app
      ignore_errors: yes